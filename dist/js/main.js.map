{"version":3,"sources":["odometer/odometer.js"],"names":["FORMAT_PARSER","MutationObserver","Odometer","TRANSITION_SUPPORT","addClass","createFromHTML","fractionalPart","now","removeClass","requestAnimationFrame","round","transitionCheckStyles","trigger","truncate","wrapJQuery","_jQueryWrapped","_old","_ref","_ref1","__slice","slice","document","createElement","style","transition","webkitTransition","mozTransition","oTransition","window","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame","WebKitMutationObserver","MozMutationObserver","html","el","innerHTML","children","name","className","replace","RegExp","split","join","evt","createEvent","initEvent","dispatchEvent","performance","Date","val","precision","Math","pow","floor","ceil","property","_i","_len","_results","jQuery","length","push","old","fn","this","odometer","apply","arguments","update","setTimeout","options","k","v","_base","_ref2","_this","duration","MAX_VALUES","resetFormat","value","cleanValue","renderInside","render","Object","defineProperty","get","_ref3","inside","outerHTML","innerText","textContent","set","_error","watchForMutations","prototype","appendChild","observer","mutations","newVal","watchMutations","startWatchingMutations","observe","childList","stopWatchingMutations","disconnect","format","radix","parseFloat","bindTransitionEnd","event","renderEnqueued","transitionEndBound","addEventListener","fractional","parsed","repeating","exec","Error","classes","cls","match","newClasses","theme","test","ribbons","formatDigits","digit","valueDigit","wholePart","_j","_len1","digits","formatFunction","reverse","renderDigit","querySelector","insertDigit","addSpacer","toString","addDigit","newValue","diff","animate","offsetHeight","before","insertBefore","chr","extraClasses","spacer","resetted","substring","animation","animateSlide","animateCount","cur","last","start","tick","delta","fraction","getDigitCount","i","max","values","call","abs","log","getFractionalDigitCount","parser","parts","resetDigits","boosted","digitCount","dist","end","fractionalCount","frame","frames","incr","j","mark","numEl","oldValue","_k","_l","_len2","_m","parent","removeChild","odometerOptions","init","elements","querySelectorAll","selector","documentElement","doScroll","createEventObject","onreadystatechange","readyState","auto","define","amd","exports","module"],"mappings":"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","file":"main.js","sourcesContent":["(function() {\n  var COUNT_FRAMERATE, COUNT_MS_PER_FRAME, DIGIT_FORMAT, DIGIT_HTML, DIGIT_SPEEDBOOST, DURATION, FORMAT_MARK_HTML, FORMAT_PARSER, FRAMERATE, FRAMES_PER_VALUE, MS_PER_FRAME, MutationObserver, Odometer, RIBBON_HTML, TRANSITION_END_EVENTS, TRANSITION_SUPPORT, VALUE_HTML, addClass, createFromHTML, fractionalPart, now, removeClass, requestAnimationFrame, round, transitionCheckStyles, trigger, truncate, wrapJQuery, _jQueryWrapped, _old, _ref, _ref1,\n    __slice = [].slice;\n\n  VALUE_HTML = '<span class=\"odometer-value\"></span>';\n\n  RIBBON_HTML = '<span class=\"odometer-ribbon\"><span class=\"odometer-ribbon-inner\">' + VALUE_HTML + '</span></span>';\n\n  DIGIT_HTML = '<span class=\"odometer-digit\"><span class=\"odometer-digit-spacer\">8</span><span class=\"odometer-digit-inner\">' + RIBBON_HTML + '</span></span>';\n\n  FORMAT_MARK_HTML = '<span class=\"odometer-formatting-mark\"></span>';\n\n  DIGIT_FORMAT = '(,ddd).dd';\n\n  FORMAT_PARSER = /^\\(?([^)]*)\\)?(?:(.)(d+))?$/;\n\n  FRAMERATE = 30;\n\n  DURATION = 2000;\n\n  COUNT_FRAMERATE = 20;\n\n  FRAMES_PER_VALUE = 2;\n\n  DIGIT_SPEEDBOOST = .5;\n\n  MS_PER_FRAME = 1000 / FRAMERATE;\n\n  COUNT_MS_PER_FRAME = 1000 / COUNT_FRAMERATE;\n\n  TRANSITION_END_EVENTS = 'transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd';\n\n  transitionCheckStyles = document.createElement('div').style;\n\n  TRANSITION_SUPPORT = (transitionCheckStyles.transition != null) || (transitionCheckStyles.webkitTransition != null) || (transitionCheckStyles.mozTransition != null) || (transitionCheckStyles.oTransition != null);\n\n  requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\n  MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n\n  createFromHTML = function(html) {\n    var el;\n    el = document.createElement('div');\n    el.innerHTML = html;\n    return el.children[0];\n  };\n\n  removeClass = function(el, name) {\n    return el.className = el.className.replace(new RegExp(\"(^| )\" + (name.split(' ').join('|')) + \"( |$)\", 'gi'), ' ');\n  };\n\n  addClass = function(el, name) {\n    removeClass(el, name);\n    return el.className += \" \" + name;\n  };\n\n  trigger = function(el, name) {\n    var evt;\n    if (document.createEvent != null) {\n      evt = document.createEvent('HTMLEvents');\n      evt.initEvent(name, true, true);\n      return el.dispatchEvent(evt);\n    }\n  };\n\n  now = function() {\n    var _ref, _ref1;\n    return (_ref = (_ref1 = window.performance) != null ? typeof _ref1.now === \"function\" ? _ref1.now() : void 0 : void 0) != null ? _ref : +(new Date);\n  };\n\n  round = function(val, precision) {\n    if (precision == null) {\n      precision = 0;\n    }\n    if (!precision) {\n      return Math.round(val);\n    }\n    val *= Math.pow(10, precision);\n    val += 0.5;\n    val = Math.floor(val);\n    return val /= Math.pow(10, precision);\n  };\n\n  truncate = function(val) {\n    if (val < 0) {\n      return Math.ceil(val);\n    } else {\n      return Math.floor(val);\n    }\n  };\n\n  fractionalPart = function(val) {\n    return val - round(val);\n  };\n\n  _jQueryWrapped = false;\n\n  (wrapJQuery = function() {\n    var property, _i, _len, _ref, _results;\n    if (_jQueryWrapped) {\n      return;\n    }\n    if (window.jQuery != null) {\n      _jQueryWrapped = true;\n      _ref = ['html', 'text'];\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        property = _ref[_i];\n        _results.push((function(property) {\n          var old;\n          old = window.jQuery.fn[property];\n          return window.jQuery.fn[property] = function(val) {\n            var _ref1;\n            if ((val == null) || (((_ref1 = this[0]) != null ? _ref1.odometer : void 0) == null)) {\n              return old.apply(this, arguments);\n            }\n            return this[0].odometer.update(val);\n          };\n        })(property));\n      }\n      return _results;\n    }\n  })();\n\n  setTimeout(wrapJQuery, 0);\n\n  Odometer = (function() {\n    function Odometer(options) {\n      var e, k, property, v, _base, _i, _len, _ref, _ref1, _ref2,\n        _this = this;\n      this.options = options;\n      this.el = this.options.el;\n      if (this.el.odometer != null) {\n        return this.el.odometer;\n      }\n      this.el.odometer = this;\n      _ref = Odometer.options;\n      for (k in _ref) {\n        v = _ref[k];\n        if (this.options[k] == null) {\n          this.options[k] = v;\n        }\n      }\n      if ((_base = this.options).duration == null) {\n        _base.duration = DURATION;\n      }\n      this.MAX_VALUES = ((this.options.duration / MS_PER_FRAME) / FRAMES_PER_VALUE) | 0;\n      this.resetFormat();\n      this.value = this.cleanValue((_ref1 = this.options.value) != null ? _ref1 : '');\n      this.renderInside();\n      this.render();\n      try {\n        _ref2 = ['innerHTML', 'innerText', 'textContent'];\n        for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n          property = _ref2[_i];\n          if (this.el[property] != null) {\n            (function(property) {\n              return Object.defineProperty(_this.el, property, {\n                get: function() {\n                  var _ref3;\n                  if (property === 'innerHTML') {\n                    return _this.inside.outerHTML;\n                  } else {\n                    return (_ref3 = _this.inside.innerText) != null ? _ref3 : _this.inside.textContent;\n                  }\n                },\n                set: function(val) {\n                  return _this.update(val);\n                }\n              });\n            })(property);\n          }\n        }\n      } catch (_error) {\n        e = _error;\n        this.watchForMutations();\n      }\n      this;\n    }\n\n    Odometer.prototype.renderInside = function() {\n      this.inside = document.createElement('div');\n      this.inside.className = 'odometer-inside';\n      this.el.innerHTML = '';\n      return this.el.appendChild(this.inside);\n    };\n\n    Odometer.prototype.watchForMutations = function() {\n      var e,\n        _this = this;\n      if (MutationObserver == null) {\n        return;\n      }\n      try {\n        if (this.observer == null) {\n          this.observer = new MutationObserver(function(mutations) {\n            var newVal;\n            newVal = _this.el.innerText;\n            _this.renderInside();\n            _this.render(_this.value);\n            return _this.update(newVal);\n          });\n        }\n        this.watchMutations = true;\n        return this.startWatchingMutations();\n      } catch (_error) {\n        e = _error;\n      }\n    };\n\n    Odometer.prototype.startWatchingMutations = function() {\n      if (this.watchMutations) {\n        return this.observer.observe(this.el, {\n          childList: true\n        });\n      }\n    };\n\n    Odometer.prototype.stopWatchingMutations = function() {\n      var _ref;\n      return (_ref = this.observer) != null ? _ref.disconnect() : void 0;\n    };\n\n    Odometer.prototype.cleanValue = function(val) {\n      var _ref;\n      if (typeof val === 'string') {\n        val = val.replace((_ref = this.format.radix) != null ? _ref : '.', '<radix>');\n        val = val.replace(/[.,]/g, '');\n        val = val.replace('<radix>', '.');\n        val = parseFloat(val, 10) || 0;\n      }\n      return round(val, this.format.precision);\n    };\n\n    Odometer.prototype.bindTransitionEnd = function() {\n      var event, renderEnqueued, _i, _len, _ref, _results,\n        _this = this;\n      if (this.transitionEndBound) {\n        return;\n      }\n      this.transitionEndBound = true;\n      renderEnqueued = false;\n      _ref = TRANSITION_END_EVENTS.split(' ');\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        event = _ref[_i];\n        _results.push(this.el.addEventListener(event, function() {\n          if (renderEnqueued) {\n            return true;\n          }\n          renderEnqueued = true;\n          setTimeout(function() {\n            _this.render();\n            renderEnqueued = false;\n            return trigger(_this.el, 'odometerdone');\n          }, 0);\n          return true;\n        }, false));\n      }\n      return _results;\n    };\n\n    Odometer.prototype.resetFormat = function() {\n      var format, fractional, parsed, precision, radix, repeating, _ref, _ref1;\n      format = (_ref = this.options.format) != null ? _ref : DIGIT_FORMAT;\n      format || (format = 'd');\n      parsed = FORMAT_PARSER.exec(format);\n      if (!parsed) {\n        throw new Error(\"Odometer: Unparsable digit format\");\n      }\n      _ref1 = parsed.slice(1, 4), repeating = _ref1[0], radix = _ref1[1], fractional = _ref1[2];\n      precision = (fractional != null ? fractional.length : void 0) || 0;\n      return this.format = {\n        repeating: repeating,\n        radix: radix,\n        precision: precision\n      };\n    };\n\n    Odometer.prototype.render = function(value) {\n      var classes, cls, match, newClasses, theme, _i, _len;\n      if (value == null) {\n        value = this.value;\n      }\n      this.stopWatchingMutations();\n      this.resetFormat();\n      this.inside.innerHTML = '';\n      theme = this.options.theme;\n      classes = this.el.className.split(' ');\n      newClasses = [];\n      for (_i = 0, _len = classes.length; _i < _len; _i++) {\n        cls = classes[_i];\n        if (!cls.length) {\n          continue;\n        }\n        if (match = /^odometer-theme-(.+)$/.exec(cls)) {\n          theme = match[1];\n          continue;\n        }\n        if (/^odometer(-|$)/.test(cls)) {\n          continue;\n        }\n        newClasses.push(cls);\n      }\n      newClasses.push('odometer');\n      if (!TRANSITION_SUPPORT) {\n        newClasses.push('odometer-no-transitions');\n      }\n      if (theme) {\n        newClasses.push(\"odometer-theme-\" + theme);\n      } else {\n        newClasses.push(\"odometer-auto-theme\");\n      }\n      this.el.className = newClasses.join(' ');\n      this.ribbons = {};\n      this.formatDigits(value);\n      return this.startWatchingMutations();\n    };\n\n    Odometer.prototype.formatDigits = function(value) {\n      var digit, valueDigit, valueString, wholePart, _i, _j, _len, _len1, _ref, _ref1;\n      this.digits = [];\n      if (this.options.formatFunction) {\n        valueString = this.options.formatFunction(value);\n        _ref = valueString.split('').reverse();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          valueDigit = _ref[_i];\n          if (valueDigit.match(/0-9/)) {\n            digit = this.renderDigit();\n            digit.querySelector('.odometer-value').innerHTML = valueDigit;\n            this.digits.push(digit);\n            this.insertDigit(digit);\n          } else {\n            this.addSpacer(valueDigit);\n          }\n        }\n      } else {\n        wholePart = !this.format.precision || !fractionalPart(value) || false;\n        _ref1 = value.toString().split('').reverse();\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          digit = _ref1[_j];\n          if (digit === '.') {\n            wholePart = true;\n          }\n          this.addDigit(digit, wholePart);\n        }\n      }\n    };\n\n    Odometer.prototype.update = function(newValue) {\n      var diff,\n        _this = this;\n      newValue = this.cleanValue(newValue);\n      if (!(diff = newValue - this.value)) {\n        return;\n      }\n      removeClass(this.el, 'odometer-animating-up odometer-animating-down odometer-animating');\n      if (diff > 0) {\n        addClass(this.el, 'odometer-animating-up');\n      } else {\n        addClass(this.el, 'odometer-animating-down');\n      }\n      this.stopWatchingMutations();\n      this.animate(newValue);\n      this.startWatchingMutations();\n      setTimeout(function() {\n        _this.el.offsetHeight;\n        return addClass(_this.el, 'odometer-animating');\n      }, 0);\n      return this.value = newValue;\n    };\n\n    Odometer.prototype.renderDigit = function() {\n      return createFromHTML(DIGIT_HTML);\n    };\n\n    Odometer.prototype.insertDigit = function(digit, before) {\n      if (before != null) {\n        return this.inside.insertBefore(digit, before);\n      } else if (!this.inside.children.length) {\n        return this.inside.appendChild(digit);\n      } else {\n        return this.inside.insertBefore(digit, this.inside.children[0]);\n      }\n    };\n\n    Odometer.prototype.addSpacer = function(chr, before, extraClasses) {\n      var spacer;\n      spacer = createFromHTML(FORMAT_MARK_HTML);\n      spacer.innerHTML = chr;\n      if (extraClasses) {\n        addClass(spacer, extraClasses);\n      }\n      return this.insertDigit(spacer, before);\n    };\n\n    Odometer.prototype.addDigit = function(value, repeating) {\n      var chr, digit, resetted, _ref;\n      if (repeating == null) {\n        repeating = true;\n      }\n      if (value === '-') {\n        return this.addSpacer(value, null, 'odometer-negation-mark');\n      }\n      if (value === '.') {\n        return this.addSpacer((_ref = this.format.radix) != null ? _ref : '.', null, 'odometer-radix-mark');\n      }\n      if (repeating) {\n        resetted = false;\n        while (true) {\n          if (!this.format.repeating.length) {\n            if (resetted) {\n              throw new Error(\"Bad odometer format without digits\");\n            }\n            this.resetFormat();\n            resetted = true;\n          }\n          chr = this.format.repeating[this.format.repeating.length - 1];\n          this.format.repeating = this.format.repeating.substring(0, this.format.repeating.length - 1);\n          if (chr === 'd') {\n            break;\n          }\n          this.addSpacer(chr);\n        }\n      }\n      digit = this.renderDigit();\n      digit.querySelector('.odometer-value').innerHTML = value;\n      this.digits.push(digit);\n      return this.insertDigit(digit);\n    };\n\n    Odometer.prototype.animate = function(newValue) {\n      if (!TRANSITION_SUPPORT || this.options.animation === 'count') {\n        return this.animateCount(newValue);\n      } else {\n        return this.animateSlide(newValue);\n      }\n    };\n\n    Odometer.prototype.animateCount = function(newValue) {\n      var cur, diff, last, start, tick,\n        _this = this;\n      if (!(diff = +newValue - this.value)) {\n        return;\n      }\n      start = last = now();\n      cur = this.value;\n      return (tick = function() {\n        var delta, dist, fraction;\n        if ((now() - start) > _this.options.duration) {\n          _this.value = newValue;\n          _this.render();\n          trigger(_this.el, 'odometerdone');\n          return;\n        }\n        delta = now() - last;\n        if (delta > COUNT_MS_PER_FRAME) {\n          last = now();\n          fraction = delta / _this.options.duration;\n          dist = diff * fraction;\n          cur += dist;\n          _this.render(Math.round(cur));\n        }\n        if (requestAnimationFrame != null) {\n          return requestAnimationFrame(tick);\n        } else {\n          return setTimeout(tick, COUNT_MS_PER_FRAME);\n        }\n      })();\n    };\n\n    Odometer.prototype.getDigitCount = function() {\n      var i, max, value, values, _i, _len;\n      values = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      for (i = _i = 0, _len = values.length; _i < _len; i = ++_i) {\n        value = values[i];\n        values[i] = Math.abs(value);\n      }\n      max = Math.max.apply(Math, values);\n      return Math.ceil(Math.log(max + 1) / Math.log(10));\n    };\n\n    Odometer.prototype.getFractionalDigitCount = function() {\n      var i, parser, parts, value, values, _i, _len;\n      values = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      parser = /^\\-?\\d*\\.(\\d*?)0*$/;\n      for (i = _i = 0, _len = values.length; _i < _len; i = ++_i) {\n        value = values[i];\n        values[i] = value.toString();\n        parts = parser.exec(values[i]);\n        if (parts == null) {\n          values[i] = 0;\n        } else {\n          values[i] = parts[1].length;\n        }\n      }\n      return Math.max.apply(Math, values);\n    };\n\n    Odometer.prototype.resetDigits = function() {\n      this.digits = [];\n      this.ribbons = [];\n      this.inside.innerHTML = '';\n      return this.resetFormat();\n    };\n\n    Odometer.prototype.animateSlide = function(newValue) {\n      var boosted, cur, diff, digitCount, digits, dist, end, fractionalCount, frame, frames, i, incr, j, mark, numEl, oldValue, start, _base, _i, _j, _k, _l, _len, _len1, _len2, _m, _ref, _results;\n      oldValue = this.value;\n      fractionalCount = this.getFractionalDigitCount(oldValue, newValue);\n      if (fractionalCount) {\n        newValue = newValue * Math.pow(10, fractionalCount);\n        oldValue = oldValue * Math.pow(10, fractionalCount);\n      }\n      if (!(diff = newValue - oldValue)) {\n        return;\n      }\n      this.bindTransitionEnd();\n      digitCount = this.getDigitCount(oldValue, newValue);\n      digits = [];\n      boosted = 0;\n      for (i = _i = 0; 0 <= digitCount ? _i < digitCount : _i > digitCount; i = 0 <= digitCount ? ++_i : --_i) {\n        start = truncate(oldValue / Math.pow(10, digitCount - i - 1));\n        end = truncate(newValue / Math.pow(10, digitCount - i - 1));\n        dist = end - start;\n        if (Math.abs(dist) > this.MAX_VALUES) {\n          frames = [];\n          incr = dist / (this.MAX_VALUES + this.MAX_VALUES * boosted * DIGIT_SPEEDBOOST);\n          cur = start;\n          while ((dist > 0 && cur < end) || (dist < 0 && cur > end)) {\n            frames.push(Math.round(cur));\n            cur += incr;\n          }\n          if (frames[frames.length - 1] !== end) {\n            frames.push(end);\n          }\n          boosted++;\n        } else {\n          frames = (function() {\n            _results = [];\n            for (var _j = start; start <= end ? _j <= end : _j >= end; start <= end ? _j++ : _j--){ _results.push(_j); }\n            return _results;\n          }).apply(this);\n        }\n        for (i = _k = 0, _len = frames.length; _k < _len; i = ++_k) {\n          frame = frames[i];\n          frames[i] = Math.abs(frame % 10);\n        }\n        digits.push(frames);\n      }\n      this.resetDigits();\n      _ref = digits.reverse();\n      for (i = _l = 0, _len1 = _ref.length; _l < _len1; i = ++_l) {\n        frames = _ref[i];\n        if (!this.digits[i]) {\n          this.addDigit(' ', i >= fractionalCount);\n        }\n        if ((_base = this.ribbons)[i] == null) {\n          _base[i] = this.digits[i].querySelector('.odometer-ribbon-inner');\n        }\n        this.ribbons[i].innerHTML = '';\n        if (diff < 0) {\n          frames = frames.reverse();\n        }\n        for (j = _m = 0, _len2 = frames.length; _m < _len2; j = ++_m) {\n          frame = frames[j];\n          numEl = document.createElement('div');\n          numEl.className = 'odometer-value';\n          numEl.innerHTML = frame;\n          this.ribbons[i].appendChild(numEl);\n          if (j === frames.length - 1) {\n            addClass(numEl, 'odometer-last-value');\n          }\n          if (j === 0) {\n            addClass(numEl, 'odometer-first-value');\n          }\n        }\n      }\n      if (start < 0) {\n        this.addDigit('-');\n      }\n      mark = this.inside.querySelector('.odometer-radix-mark');\n      if (mark != null) {\n        mark.parent.removeChild(mark);\n      }\n      if (fractionalCount) {\n        return this.addSpacer(this.format.radix, this.digits[fractionalCount - 1], 'odometer-radix-mark');\n      }\n    };\n\n    return Odometer;\n\n  })();\n\n  Odometer.options = (_ref = window.odometerOptions) != null ? _ref : {};\n\n  setTimeout(function() {\n    var k, v, _base, _ref1, _results;\n    if (window.odometerOptions) {\n      _ref1 = window.odometerOptions;\n      _results = [];\n      for (k in _ref1) {\n        v = _ref1[k];\n        _results.push((_base = Odometer.options)[k] != null ? (_base = Odometer.options)[k] : _base[k] = v);\n      }\n      return _results;\n    }\n  }, 0);\n\n  Odometer.init = function() {\n    var el, elements, _i, _len, _ref1, _results;\n    if (document.querySelectorAll == null) {\n      return;\n    }\n    elements = document.querySelectorAll(Odometer.options.selector || '.odometer');\n    _results = [];\n    for (_i = 0, _len = elements.length; _i < _len; _i++) {\n      el = elements[_i];\n      _results.push(el.odometer = new Odometer({\n        el: el,\n        value: (_ref1 = el.innerText) != null ? _ref1 : el.textContent\n      }));\n    }\n    return _results;\n  };\n\n  if ((((_ref1 = document.documentElement) != null ? _ref1.doScroll : void 0) != null) && (document.createEventObject != null)) {\n    _old = document.onreadystatechange;\n    document.onreadystatechange = function() {\n      if (document.readyState === 'complete' && Odometer.options.auto !== false) {\n        Odometer.init();\n      }\n      return _old != null ? _old.apply(this, arguments) : void 0;\n    };\n  } else {\n    document.addEventListener('DOMContentLoaded', function() {\n      if (Odometer.options.auto !== false) {\n        return Odometer.init();\n      }\n    }, false);\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return Odometer;\n    });\n  } else if (typeof exports !== \"undefined\" && exports !== null) {\n    module.exports = Odometer;\n  } else {\n    window.Odometer = Odometer;\n  }\n\n}).call(this);\n"]}